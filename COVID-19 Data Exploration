--Dataset for COVID infections and vaccinations was downloaded from https://ourworldindata.org/covid-deaths.
--COVID data was then parsed into a database table.
--Analytics were made using SQL queries in Microsoft SQL Server Management Studio.




SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
WHERE DATALENGTH(continent) > 0
ORDER BY 1,2

-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract COVID in your country
-- As of 11-09-2023, there is a 1.1% chance that one could die of COVID complications in the United States
SELECT location, date, total_cases, total_deaths, (total_deaths/NULLIF(total_cases, 0))*100 AS DeathPercentage
FROM CovidDeaths
WHERE location like '%states'
AND DATALENGTH(continent) > 0
ORDER BY 1,2


-- Total Cases vs Population
-- Shows what percentage of the population in the United States has contracted COVID
-- As of 11-09-2023, 30.58% of the population in the United States has contracted COVID
SELECT location, date, population, total_cases, (total_cases/population)*100 AS PercentPopulationInfected
FROM CovidDeaths
WHERE location like '%states'
AND DATALENGTH(continent) > 0
ORDER BY 1,2

-- Countries with highest infection rate compared to population
SELECT location, population, MAX(total_cases) AS HighestInfectionCount, MAX((total_cases/population))*100 AS PercentPopulationInfected
FROM CovidDeaths
WHERE DATALENGTH(continent) > 0
GROUP BY location, population
ORDER BY PercentPopulationInfected DESC



-- Countries with highest death count per population
SELECT location, MAX(total_deaths) AS TotalDeathCount
FROM CovidDeaths
WHERE DATALENGTH(continent) > 0
GROUP BY location
ORDER BY TotalDeathCount DESC

-- Continents with highest death count per population
SELECT location, MAX(total_deaths) AS TotalDeathCount
FROM CovidDeaths
WHERE DATALENGTH(continent) = 0
AND location not like '%income'
GROUP BY location
ORDER BY TotalDeathCount DESC


-- Global numbers
SELECT date, SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths)/NULLIF(SUM(new_cases),0)*100 AS DeathPercentage
FROM CovidDeaths
WHERE location = 'world'
GROUP BY date
ORDER BY 1,2


-- Total population vs vaccinations
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	ON dea.location = vac.location
	AND dea. date = vac. date
WHERE DATALENGTH(dea.continent) > 0
ORDER BY 2,3

--Percentage Vaccinated per Day with CTE
With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
AS (
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	ON dea.location = vac.location
	AND dea. date = vac. date
WHERE DATALENGTH(dea.continent) > 0
)
Select *, (RollingPeopleVaccinated/Population)*100 AS PercentPopulationVaccinated
FROM PopvsVac

--Percentage Vaccinated per Day with Temp table
DROP TABLE IF EXISTS #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(
Continent nvarchar (255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	ON dea.location = vac.location
	AND dea. date = vac. date
WHERE DATALENGTH(dea.continent) > 0
ORDER BY 2,3

SELECT *, (RollingPeopleVaccinated/Population)*100
FROM #PercentPopulationVaccinated


-- Creating view to store data for later visualizations
CREATE VIEW RollingPopulationVaccinated AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM CovidDeaths dea
JOIN CovidVaccinations vac
	ON dea.location = vac.location
	AND dea. date = vac. date
WHERE DATALENGTH(dea.continent) > 0
